# thermocouple.py
from dataclasses import dataclass

@dataclass
class TCRange:
    """Thermocouple temperature range"""
    Tmin: float
    Tmax: float
    Emin: float
    Emax: float
    d: list[float]

class Thermocouple:
    """Base class for thermocouple calculations"""

    @staticmethod
    def calc_t90(E, d):
        return sum([d[i] * E**i for i in range(len(d))])

    @classmethod
    def t90(cls, E):
        if E < cls.ranges[0].Emin:
            raise ValueError(f"E out of range for type {cls.tc_type} thermocouple (E={E} < {cls.ranges[0].Emin})")
        if E > cls.ranges[-1].Emax:
            raise ValueError(f"E out of range for type {cls.tc_type} thermocouple (E={E} > {cls.ranges[-1].Emax})")
        for r in cls.ranges:
            if r.Emin <= E <= r.Emax:
                return cls.calc_t90(E, r.d)
        assert False, f"E={E} not found in any range for {cls}"

class type_b(Thermocouple):
    tc_type = 'B'
    ranges = [
        TCRange(250, 700, 0.291, 2.431, [
             9.8423321E+01, 6.9971500E+02, -8.4765304E+02, 1.0052644E+03,
            -8.3345952E+02, 4.5508542E+02, -1.5523037E+02, 2.9886750E+01,
            -2.4742860E+00]),
        TCRange(700, 1820, 2.431, 13.820, [
             2.1315071E+02, 2.8510504E+02, -5.2742887E+01, 9.9160804E+00,
            -1.2965303E+00, 1.1195870E-01, -6.0625199E-03, 1.8661696E-04,
            -2.4878585E-06])
    ]

class type_e(Thermocouple):
    tc_type = 'E'
    ranges = [
        TCRange(-200, 0, -8.825, 0, [
             0.0000000E+00,  1.6977288E+01, -4.3514970E-01, -1.5859697E-01,
            -9.2502871E-02, -2.6084314E-02, -4.1360199E-03, -3.4034030E-04,
            -1.1564890E-05,  0.0000000E+00 ]),
        TCRange(0, 1000, 0, 76.373, [
             0.0000000E+00,  1.7057035E+01, -2.3301759E-01,  6.5435585E-03,
            -7.3562749E-05, -1.7896001E-06,  8.4036165E-08, -1.3735879E-09,
             1.0629823E-11, -3.2447087E-14])
    ]

class type_j(Thermocouple):
    tc_type = 'J'
    ranges = [
        TCRange(-210, 0, -8.095, 0, [
             0.0000000E+00,  1.9528268E+01, -1.2286185E+00, -1.0752178E+00,
            -5.9086933E-01, -1.7256713E-01, -2.8131513E-02, -2.3963370E-03,
            -8.3823321E-05]),
        TCRange(0, 760, 0, 42.919, [
             0.000000E+00, 1.978425E+01, -2.001204E-01, 1.036969E-02,
            -2.549687E-04, 3.585153E-06, -5.344285E-08, 5.099890E-10]),
        TCRange(760, 1200, 42.919, 69.553, [
            -3.11358187E+03, 3.00543684E+02, -9.94773230E+00, 1.70276630E-01,
            -1.43033468E-03, 4.73886084E-06])
    ]

class type_k(Thermocouple):
    tc_type = 'K'
    ranges = [
        TCRange(-200, 0, -5.891, 0, [
             0.0000000E+00,  2.5173462E+01, -1.1662878E+00, -1.0833638E+00,
            -8.9773540E-01, -3.7342377E-01, -8.6632643E-02, -1.0450598E-02,
            -5.1920577E-04]),
        TCRange(0, 500, 0, 20.644, [
            0.000000E+00,  2.508355E+01, 7.860106E-02, -2.503131E-01,
            8.315270E-02, -1.228034E-02, 9.804036E-04, -4.413030E-05,
            1.057734E-06, -1.052755E-08]),
        TCRange(500, 1372, 20.644, 54.886, [
            -1.318058E+02, 4.830222E+01, -1.646031E+00, 5.464731E-02,
            -9.650715E-04, 8.802193E-06, -3.110810E-08])
    ]

class type_n(Thermocouple):
    tc_type = 'N'
    ranges = [
        TCRange(-200, 0, -3.990, 0, [
            0.0000000E+00, 3.8436847E+01, 1.1010485E+00, 5.2229312E+00,
            7.2060525E+00, 5.8488586E+00, 2.7754916E+00, 7.7075166E-01,
            1.1582665E-01, 7.3138868E-03]),
        TCRange(0, 600, 0, 20.613, [
             0.00000E+00,  3.86896E+01, -1.08267E+00,  4.70205E-02,
            -2.12169E-06, -1.17272E-04,  5.39280E-06, -7.98156E-08]),
        TCRange(600, 1300, 20.613, 47.513, [
             1.972485E+01, 3.300943E+01, -3.915159E-01, 9.855391E-03,
            -1.274371E-04, 7.767022E-07])
    ]

class type_r(Thermocouple):
    tc_type='R'
    ranges = [
        TCRange(-50, 250, -0.226, 1.923, [
             0.0000000E+00, 1.8891380E+02, -9.3835290E+01, 1.3068619E+02,
            -2.2703580E+02, 3.5145659E+02, -3.8953900E+02, 2.8239471E+02,
            -1.2607281E+02, 3.1353611E+01, -3.3187769E+00]),
        TCRange(250, 1200, 1.923, 13.228, [
             1.334584505E+01, 1.472644573E+02, -1.844024844E+01, 4.031129726E+00,
            -6.249428360E-01, 6.468412046E-02, -4.458750426E-03, 1.994710149E-04,
            -5.313401790E-06, 6.481976217E-08]),
        TCRange(1064, 1664.5, 11.361, 19.739, [
            -8.199599416E+01, 1.553962042E+02, -8.342197663E+00, 4.279433549E-01,
            -1.191577910E-02, 1.492290091E-04]),
        TCRange(1664.5, 1768.1, 19.739, 21.103, [
            3.406177836E+04, -7.023729171E+03, 5.582903813E+02, -1.952394635E+01,
            2.560740231E-01])
    ]

all_types = [type_b, type_e, type_j, type_k, type_n, type_r]
